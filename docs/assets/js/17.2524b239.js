(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{361:function(a,t,s){a.exports=s.p+"assets/img/text-input-card.162a2d27.png"},389:function(a,t,s){"use strict";s.r(t);var n=s(42),e=Object(n.a)({},(function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",[a._v("Text Input Card  - "),n("small",[n("span",{staticStyle:{color:"rgb(245, 75, 66)"}},[a._v("Pro")])])]),a._v(" "),n("h4",{attrs:{id:"preview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#preview"}},[a._v("#")]),a._v(" Preview:")]),a._v(" "),n("br"),a._v(" "),n("img",{attrs:{src:s(361),width:"280px",alt:"Energy Card Preview"}}),a._v(" "),n("br"),a._v(" "),n("br"),a._v(" "),n("blockquote",{staticStyle:{color:"#000"}},[n("h4",[a._v("This feature is included in ESPDASH "),n("span",{staticStyle:{color:"rgb(245, 75, 66)"}},[a._v("Pro")])]),a._v(" "),n("a",{attrs:{href:"https://espdash.pro",target:"_blank"}},[a._v("Know more")])]),a._v(" "),n("br"),a._v(" "),n("p",[a._v("Text Input Card gives you the ability to take String input from user and save them in your application. It provides you with a input box on the dashboard where user can send back text to your application.")]),a._v(" "),n("p",[a._v("This card is very useful for saving WiFi credentials, passwords and general information.")]),a._v(" "),n("br"),a._v(" "),n("h4",{attrs:{id:"type"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[a._v("#")]),a._v(" Type:")]),a._v(" "),n("p",[n("code",[a._v("TEXT_INPUT_CARD")])]),a._v(" "),n("br"),a._v(" "),n("h4",{attrs:{id:"valid-data-types"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#valid-data-types"}},[a._v("#")]),a._v(" Valid Data Types:")]),a._v(" "),n("ul",[n("li",[n("code",[a._v("String")])])]),a._v(" "),n("br"),a._v(" "),n("h4",{attrs:{id:"initializer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#initializer"}},[a._v("#")]),a._v(" Initializer:")]),a._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* \n  Energy Card\n  Valid Arguments: (ESPDash dashboard, Card Type, const char* name)\n*/")]),a._v("\nCard "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("card1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),a._v("dashboard"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" TEXT_INPUT_CARD"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"User Email"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),n("br"),a._v(" "),n("h4",{attrs:{id:"callback"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#callback"}},[a._v("#")]),a._v(" Callback:")]),a._v(" "),n("p",[a._v("Text Input Card requires a callback function which will be called when we receive a input from our dashboard. In setup block, we will be calling our "),n("code",[a._v("attachCallback")]),a._v(" function and provide a lambda (callback) function with a "),n("code",[a._v("const char*")]),a._v(" (character array) argument.")]),a._v(" "),n("p",[n("strong",[a._v("Note:")]),a._v(" You need to call the "),n("code",[a._v("update")]),a._v(" function and "),n("code",[a._v("sendUpdates")]),a._v(" immediately once you receive the value in callback. Otherwise user input will not be registered on dashboard and it will keep the card stuck in 'waiting' phase.")]),a._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/*\n  We provide our attachCallback with a lambda function to handle incomming data\n  `value` is the boolean sent from your dashboard\n*/")]),a._v("\ncard1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("attachCallback")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  Serial"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[Card1] Text Input Callback Triggered: "')]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("String")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  card1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  dashboard"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("sendUpdates")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),n("br"),a._v(" "),n("h4",{attrs:{id:"updaters"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#updaters"}},[a._v("#")]),a._v(" Updaters:")]),a._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[a._v("card1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("*")]),a._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[a._v("card1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("update")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("String value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);